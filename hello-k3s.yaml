apiVersion: v1
kind: Service
metadata:
  name: hello-k3s-service-a
  namespace: default
spec:
  selector:
    app: hello-k3s-app-a
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: hello-k3s-service-b
  namespace: default
spec:
  selector:
    app: hello-k3s-app-b
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: hello-k3s-service-c
  namespace: default
spec:
  selector:
    app: hello-k3s-app-c
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  hello-k3s-deployment-a
  namespace: default
  labels:
    app:  hello-k3s-app-a
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-k3s-app-a
  template:
    metadata:
      labels:
        app:  hello-k3s-app-a
    spec:
      containers:
      - name:  hello-k3s-container-a
        image:  docker.anakin/hello-k3s-a:1.0-pi
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort:  8080
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  hello-k3s-deployment-b
  namespace: default
  labels:
    app:  hello-k3s-app-b
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-k3s-app-b
  template:
    metadata:
      labels:
        app:  hello-k3s-app-b
    spec:
      containers:
      - name:  hello-k3s-container-b
        image:  docker.anakin/hello-k3s-b:1.0-pi
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort:  8080
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  hello-k3s-deployment-c
  namespace: default
  labels:
    app:  hello-k3s-app-c
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-k3s-app-c
  template:
    metadata:
      labels:
        app:  hello-k3s-app-c
    spec:
      containers:
      - name:  hello-k3s-container-c
        image:  docker.anakin/hello-k3s-c:1.2-pi
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort:  8080
      restartPolicy: Always
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-k3s-ingress
  namespace: default
spec:
  rules:
  - host: "hello-k3s-a"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hello-k3s-service-a
            port:
              name: http
  - host: "hello-k3s-b"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hello-k3s-service-b
            port:
              name: http
  - host: "beta.maxzawisa.com"
    http:
      paths:
      - path: /a/
        pathType: Prefix
        backend:
          service:
            name: hello-k3s-service-a
            port:
              name: http
  - host: "beta.maxzawisa.com"
    http:
      paths:
      - path: /b/
        pathType: Prefix
        backend:
          service:
            name: hello-k3s-service-b
            port:
              name: http
  - host: "beta.maxzawisa.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hello-k3s-service-c
            port:
              name: http
---
